//// [tests/cases/compiler/formatToPartsBigInt.ts] ////

=== formatToPartsBigInt.ts ===
// Intl.NumberFormat.formatToParts should support bigInt

// Test Intl methods with new parameter type
new Intl.NumberFormat("fr").formatToParts(3000n);
>new Intl.NumberFormat("fr").formatToParts(3000n) : Intl.NumberFormatPart[]
>new Intl.NumberFormat("fr").formatToParts : (number?: number | bigint) => Intl.NumberFormatPart[]
>new Intl.NumberFormat("fr") : Intl.NumberFormat
>Intl.NumberFormat : Intl.NumberFormatConstructor
>Intl : typeof Intl
>NumberFormat : Intl.NumberFormatConstructor
>"fr" : "fr"
>formatToParts : (number?: number | bigint) => Intl.NumberFormatPart[]
>3000n : 3000n

new Intl.NumberFormat("fr").formatToParts(BigInt(123));
>new Intl.NumberFormat("fr").formatToParts(BigInt(123)) : Intl.NumberFormatPart[]
>new Intl.NumberFormat("fr").formatToParts : (number?: number | bigint) => Intl.NumberFormatPart[]
>new Intl.NumberFormat("fr") : Intl.NumberFormat
>Intl.NumberFormat : Intl.NumberFormatConstructor
>Intl : typeof Intl
>NumberFormat : Intl.NumberFormatConstructor
>"fr" : "fr"
>formatToParts : (number?: number | bigint) => Intl.NumberFormatPart[]
>BigInt(123) : bigint
>BigInt : BigIntConstructor
>123 : 123

